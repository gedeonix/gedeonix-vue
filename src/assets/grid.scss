$columns: 12;

.row, [class*=row-],
.col, [class*=col-] {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: flex-start;
  &.is-left {
    justify-content: flex-start;
  }
  &.is-right {
    justify-content: flex-end;
  }
  &.is-center {
    justify-content: center;
  }
};

.row, [class*=row-] {
  align-items: flex-start;
  margin: 0 0 0 -0.5rem;
  width: calc(0.5rem + 100% + 0.5rem);
  &.no-gutter {
    margin: 0;
    width: 100%;
    > .col, [class*=col-]  {
      padding: 0;
    }
  }
}

.col, [class*=col-] {
  align-items: center;
  flex-shrink: 1;
  flex-grow: 1;
  flex-basis: 0%;
  padding: 0 0.5rem 0.5rem;
}

@for $i from 1 to $columns {
  .col-#{$i} {
    flex-basis: ($i/$columns) * 100%;
    max-width: ($i/$columns) * 100%;
  }
}

@for $i from 1 to $columns {
  .row-#{$i} > .col { min-width: (1/$i) * 100% }
}

@for $i from 1 to $columns {
  .offset-#{$i} { margin-left: ($i/$columns) * 100% }
}

// RESPONSIVE ROWS
.row[class*=sm-] > .col,
.row[class*=md-] > .col,
.row[class*=lg-] > .col {
  min-width: 100%;
}

@for $i from 1 to $columns {
  .row.xs-#{$i} > .col { min-width: (1/$i) * 100% }
}

@media all and (min-width: $breakpoints[sm]) {
  @for $i from 1 to $columns {
    .row.sm-#{$i} > .col { min-width: (1/$i) * 100% }
  }
}

@media all and (min-width: $breakpoints[md]) {
  @for $i from 1 to $columns {
    .row.md-#{$i} > .col { min-width: (1/$i) * 100% }
  }
}
@media all and (min-width: $breakpoint-lg) {
  @for $i from 1 to $columns {
    .row.lg-#{$i} > .col { min-width: (1/$i) * 100% }
  }
}

// RESPONSIVE COLS
.col[class*=sm-],
.col[class*=md-],
.col[class*=lg-]{
  min-width: 100%;
}

@for $i from 1 to $columns {
  .col.xs-#{$i} { min-width: ($i/$columns) * 100% }
}
@media all and (min-width: $breakpoints[sm]) {
  @for $i from 1 to $columns {
    .col.sm-#{$i} { min-width: ($i/$columns) * 100% }
  }
}
@media all and (min-width: $breakpoints[md]) {
  @for $i from 1 to $columns {
    .col.md-#{$i} { min-width: ($i/$columns) * 100% }
  }
}
@media all and (min-width: $breakpoints[lg]) {
  @for $i from 1 to $columns {
    .col.lg-#{$i} { min-width: ($i/$columns) * 100% }
  }
}
@for $i from 1 to $columns {
  .width-#{$i} {
    width: ($i/$columns) * 100%;
  }
}
